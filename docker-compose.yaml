---
services:
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    env_file:
      - .env
    networks:
      - postgres-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 20s
      timeout: 5s
      retries: 3

  init-1:
    image: cg5labs/py_api:latest
    user: "tdevops"
    entrypoint: "/srv/app/generate_key"
    environment:
      SECRET_KEY: "/srv/app/app-data/secret.key"
    volumes:
      - app-data:/srv/app/app-data:rw
    depends_on:
      - postgres

  init-2:
    image: cg5labs/py_api:latest
    user: "tdevops"
    entrypoint: "/srv/app/db_init"
    environment:
      SECRET_KEY: "/srv/app/app-data/secret.key"
      PROFILE: "DEFAULT"
      DB_HOST: "postgres"
    env_file:
      - src/.env
    volumes:
      - app-data:/srv/app/app-data:rw
    depends_on:
      postgres:
        condition: service_healthy
      init-1:
        condition: service_completed_successfully
    networks:
      - postgres-network

  api:
    image: cg5labs/py_api:latest
    user: "tdevops"
    # entrypoint: "/bin/sleep 3600"
    entrypoint:
      - "/srv/app/app_init"
      - "-p DEFAULT"
    environment:
      SECRET_KEY: /srv/app/app-data/secret.key
      PROFILE: "DEFAULT"
      DB_HOST: "postgres"
    env_file:
      - src/.env
    ports:
      - "8000:8000"
    depends_on:
      - init-2
    volumes:
      - app-data:/srv/app/app-data
    networks:
      - postgres-network

networks:
  postgres-network:
    driver: bridge

volumes:
  app-data:
